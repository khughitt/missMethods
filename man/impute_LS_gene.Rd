% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute_LS_gene.R
\name{impute_LS_gene}
\alias{impute_LS_gene}
\title{LSimpute_gene}
\usage{
impute_LS_gene(
  ds,
  k = 10,
  eps = 1e-06,
  min_common_obs = 5,
  return_r_max = FALSE
)
}
\arguments{
\item{ds}{a data frame or matrix with missing values}

\item{k}{number of most correlated genes used for the imputation of a gene}

\item{eps}{used in the calculation of the weights (Bo et al. (2004) used
\code{eps = 1e-6})}

\item{min_common_obs}{a row can only take part in the imputation of another
row, if both rows share at least \code{min_common_obs} columns with no missing
values. Rows with less observed values than \code{min_common_obs} are imputed by
the mean of the observed row values.}

\item{return_r_max}{logical, normally this should be \code{FALSE}. \code{TRUE} is used
inside of \code{impute_LSA} to speed up some computations.}
}
\value{
An object of the same class as \code{ds} with imputed missing values

If \code{return_r_max = TRUE}, a list with the imputed dataset and r_max
}
\description{
Performance LSimpute_gene as described by Bo et al. (2004)
}
\details{
This function performances LSimpute_gene as described by Bo et al. (2004).
The function assumes that the genes are the rows of \code{ds}.

Bo et al. (2004) seem to have chosen \code{min_common_obs = 5}. However, they did
not documentation this behavior. This value emerged from inspecting
imputation results from the  original jar-file, which is provided by Bo et
al. (2004). The only known difference between this function and the original
one is that a row with only missing values is imputed by the observed column
means. In this case, a warning is given. The original function would not
impute such a column and return a dataset with missing values in this row.
}
\examples{
impute_LS_gene(data.frame(X = 1:11, Y = c(1:10, NA)))
}
\references{
Bo, T. H., Dysvik, B., & Jonassen, I. (2004). LSimpute: accurate
estimation of missing values in microarray data with least squares methods.
Nucleic acids research, 32(3), e34
}
